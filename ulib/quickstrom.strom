import control;
import logic;
import ltl;

action click!(x) = for element in x. { id: "click", event: false, args: [element.ref] } when element.enabled;

action changed?(x) = for element in x. { id: "changed", event: true, args: [x.ref]};

action loaded? = { id: "loaded", event: true, args: [] };

action noop! = {id:"noop",event:false,args:[]};

// bindings can take arguments.
let transition(a, ~b) = a && next b;

syntax _~>_ 5;
let a ~> ~b = transition(a, b);

let unchanged(~x) = freeze a = x. next (x == a); 
